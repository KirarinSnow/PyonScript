%!PS

% PyonScript programming language
% Definitions: Various operations


% sel -- select from two alternatives without executing (cf. ifelse)
%   bool obj1 obj2 sel -> obj
/sel
{
    3 2 roll not {exch} if pop
} bind odef

% cat -- concatenate two composite objects
%        for dictionary, second dictionary overwrites bindings in first
%        otherwise, cons
%   string1 string2 cat -> string
%   array1 array2 cat -> array
%   dict1 dict2 cat -> dict
%   obj1 obj2 cat -> pair
/cat
{
    dup string?
    {
	concatstrings
    }
    {
	dup array?
	{
	    [ [ 4 2 roll ]
	    { aload pop } forall
	    ]
	}
	{
	    dup dict?
	    {
		<< >> 3 2 roll exch copy copy
	    }
	    {
		cons
	    } ifelse
	} ifelse
    } ifelse
} bind odef

% reverse -- reverse array or string
%   array reverse -> array
%   string reverse -> string
/reverse
{
    dup xcheck
    [ exch ]
    {
	dup array?
	{
	    [ exch {counttomark 1 roll} forall ]
	}
	{
	    dup string?
	    {
		[ exch {counttomark 1 roll} forall ] str
	    }
	    {
		% do nothing
	    } ifelse
	} ifelse
    } .runandhide
    aload pop
    {
	cvx
    } if
} bind odef

% iota -- create array of integers from 0 to n-1
%   int iota -> array
/iota
{
    [ 0 1 4 3 roll 1 sub {} for ]
} bind odef

% range -- create array of integers between endpoints, inclusive
%   int int range -> array
/range
{
    [ 3 1 roll 1 exch {} for ]
} bind odef

% str -- convert to string
%        if array, must be int array; convert ints to chars
%        else, call cvs with a max-length string
%   int_array str -> string
%   obj str -> string
/str
{
    dup array?
    {
	dup length string exch 0 exch
	{
	    3 copy put
	    pop 1 add
	} forall
	pop
    }
    {
	STRINGMAX string cvs
    } ifelse
} bind odef
